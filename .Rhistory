x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
0.1+0.4+0.9+1.6
x <- 4
class(x)
x <- c(4,TRUE)
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x[x == 0] <- 6
x
x[x %in% 1:5] <- 0
x
x <- c(4, "a", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[1]]
a =  x[[1]]
class(a)
x <- 1/4
x <- 1:4
y <- 2:3
x+y
getwd()
cd WorkSpace
setwd("~/WorkSpace")
DF <- read.table("hw1_data.csv",sep=",",header=TRUE)
DF
DF[,47]
DF(,47)
DF[47,]
DF["Ozone"]
is.na(DF["Ozone"])
sum(is.na(DF["Ozone"]))
?mean
mean(DF[,"Ozone"],na.rm=TRUE)
DF[,"Ozone">31]
DF[,"Ozone">31 "Temp">90]
DF[,"Ozone">31, "Temp">90]
DF[,"Ozone">31, "Temp">90][,"Solar.R"]
mean(DF[,"Ozone">31, "Temp">90][,"Solar.R"],na.rm=TRUE)
mean(DF[,"Month"==6]["Temp"])
mean(DF[,"Month"=6]["Temp"])
DF[,"Month"=6]
DF[,"Month">6]
DF[,"Month"==6]
DF[,"Ozone"==20]
DF[,"Ozone">20]
DF[,"Ozone">31, "Temp">90][,"Solar.R"]
DF[,"Ozone">31, "Temp">90]
DF[Month>6]
DF[,Month>6]
DF[,"Month">6]
DF[21,]
DF[47,]
?subset
subset(DF,Ozone>31)
subset(DF,Ozone>31 && Temp >90)
subset(DF,Ozone>31 & Temp >90)
subset(DF,Ozone>31 & Temp >90)["Solar.R"]
mean(subset(DF,Ozone>31 & Temp >90)["Solar.R"])
subset(DF,Ozone>31 & Temp >90)["Solar.R"]
res <- subset(DF,Ozone>31 & Temp >90)["Solar.R"]
mean(res)
means(res)
summary(res)
res <- subset(DF,Month==6)
res
summary(res)
res <- subset(DF,Month==5)
summary(res)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
DF[>152,]
DF[]
DF[47,]
mean(DF[,"Ozone"],na.rm=TRUE)
res <- subset(DF,Ozone>31 & Temp >90)["Solar.R"]
mean(res)
summary(res)
res <- subset(DF,Month==6)
summary(res)
res <- subset(DF,Month==5)
summary(res)
install.packages("UsingR")
clear
clear()
library(UsingR)
data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
mse <- mean((galton$child-mu)^2)
text(63,150, paste("mu = ", mu))
text(63,140, paste("MSE = ", round(mse,2)))
}
manipulate(myHist(mu),mu = slider(62,74, step = 0.5))
mean(galton$child)
plot(galton$parent,galton$child,pch=19,col="blue")
fredData <- ad.data.frame(table(galton$child, galton$parent))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm (y ~ x -1)
lm (x ~ y -1)
data(mtcars)
mtcars
data$mpg
mtcars$mpg
lm(mtcars$mpg ~ mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
?scale()
scale(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
read.table("getdata_data_ss06hid.csv", sep=",", header=TRUE)
DF <- read.table("getdata_data_ss06hid.csv", sep=",", header=TRUE);
?subset()
subset(DF, VAL > 23, select=VAL)
res <- subset(DF, VAL > 23, select=VAL)
install.packages("xlsx")
library(xlsx)
DF2 <- read.xlsx(getdata_data_DATA.gov_NGAP.xlsx)
DF2 <- read.xlsx(getdata_data_DATA.gov_NGAP.xlsx,sheetName="Sheet1")
DF2 <- read.xlsx(getdata_data_DATA.gov_NGAP.xlsx,sheetName=1)
DF2 <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetName=1)
colIndex <- 18:23
rowIndex <- 18:23
colIndex <- 7:15
DF2 <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetName=1,colIndex=colIndex,rowIndex=rowIndex)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx",sheetName=1,colIndex=colIndex,rowIndex=rowIndex)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
xpathSApply(rootnode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
res <- xpathSApply(rootNode,"//zipcode",xmlValue)
res==21231
sum(res==21231)
install.packages("data.table")
library(data.table)
?fread()
DT <- fread("getdata_data_ss06pid.csv",sep=",",header=TRUE)
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
x <- rnom(100)
x <- rnorm(100)
y <- rnorm(100)
hist(x)
text("test")
?text()
?boxplot()
?par
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
install.packages("lattice")
install.packages("airquality")
library(datasets)
data(airquality)
install.packages("ggplot2")
qplot(Wind,Ozone, data=airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind,Ozone, data=airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind,Ozone, data=airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
data(movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
library(datasets)
data(iris)
?iris
iris$Species
factor(iris$Species)
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Lenght, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
aplly(iris,1, mean)
apply(iris,1, mean)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$hp,mtcars$cyl,mean)
a<-tapply(mtcars$hp,mtcars$cyl,mean)
a[2]
a[3]
a[3]-a[1]
debug(ls)
ls
quit
quit()
y
install.packages("swirl")
browser
q
c
c
c
c
q
quit
quit()
a <- matrix(rnorm(100),nrow=100,ncol=100)
solve(a)
a <- matrix(rnorm(100)+3,nrow=100,ncol=100)
solve(a)
dat <- mvrnorm(10000, mu=rep(0,k), Sigma=S)
install.packages("MASS")
library(MASS)
dat <- mvrnorm(10000, mu=rep(0,k), Sigma=S)
k   <- 2000
rho <- .3
S       <- matrix(rep(rho, k*k), nrow=k)
diag(S) <- 1
dat <- mvrnorm(10000, mu=rep(0,k), Sigma=S) ### be patient!
R <- cor(dat)
solve(R)
source('~/WorkSpace/coursera/ProgrammingAssignment2/cachematrix.R')
mat <- makeCacheMatrix2(R)
mat$getInv()
det(R)
solve(R)
setwd("~/WorkSpace")
dev.off()
source('~/WorkSpace/coursera/data-scientist-JH/exploratoryDataAnalysis/Course-Project-2/plot6.R')
install.packages("quantmod")
setwd("~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4")
read.csv("getdata_data_ss06hid.csv")
rawdata <- read.csv("getdata_data_ss06hid.csv")
strsplit(rawdata)
strsplit(rawdata,"wgpt")
strsplit(names(rawdata),"wgpt")
strsplit(names(rawdata),"wgpt")[123]
strsplit(names(rawdata),"wgtp")[123]
GDP <- read.csv("getdata_data_GDP.csv")
View(GDP)
source.with.encoding('~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4/Q2Q3Q4.R', encoding='UTF-8')
mean(GDP$GDP2012)
?grep
grep("^United",GDP$Country)
CountryNames <- GDP$Country
CountryNames
grep("^United",CountryNames)
source.with.encoding('~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4/Q2Q3Q4.R', encoding='UTF-8')
View(DF)
grep("Fiscal year end: June 30", DF$Special.Notes)
grepl("Fiscal year end: June 30", DF$Special.Notes)
sum(grepl("Fiscal year end: June 30", DF$Special.Notes))
source('~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4/Q5.R')
View(amzn)
str(amzn)
data <- as.data.frame(amzn)
View(data)
str(data)
index(data)
index(amzn)
date <- index(amzn)
size(date)
dim(date)
date <- index(amzn)
date
str(date)
?as.date
?date
?as.Date
date <- as.Date(date,"%Y-%m-%d")
date
str(date)
date[date >= as.Date(2012-01-01)]
date[date >= as.Date(2012-01-01) & date < as.Date(2013-01-01)]
date[date > as.Date(2012-01-01)]
date[date > as.Date("2012-01-01")]
date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")]
dim(date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")])
len(date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")])
length(date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")])
?weekday
?Weekday
?weekdays
date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")]
y2012 <- date[date >= as.Date("2012-01-01") & date < as.Date("2013-01-01")]
source('~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4/Q5.R')
source('~/WorkSpace/coursera/data-scientist-JH/gettingAndCleaningData/Quizz-4/Q5.R')
weekdays(y2012)
weekdays(y2012)=="lundi"
sum(weekdays(y2012)=="lundi")
sum(weekdays(y2012)=="lundi")
length(y2012)
